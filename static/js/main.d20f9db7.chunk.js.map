{"version":3,"sources":["redux/contacts/contacts-actions.js","redux/contacts/contacts-operation.js","redux/contacts/contacts-reducer.js","redux/contacts/contacts-selectors.js","components/ContactForm/ContactForm.jsx","components/ContactList/ContactItem.jsx","components/ContactList/ContactList.jsx","components/Filter/Filter.jsx","App.jsx","redux/store.js","index.js","components/ContactForm/ContactForm.module.css","components/ContactList/ContactList.module.css"],"names":["fetchContactsRequest","createAction","fetchContactsSuccess","fetchContactsError","addContactRequest","addContactSuccess","addContactError","deleteContactRequest","deleteContactSuccess","deleteContactError","searchContacts","axios","defaults","baseURL","dispatch","a","actions","get","data","toast","error","message","name","number","contact","post","contactId","delete","items","createReducer","_","payload","sort","b","localeCompare","state","filter","id","loading","combineReducers","getContacts","contacts","getFilter","getLoading","getError","getfilteredContacts","createSelector","normalizedFilter","toLowerCase","includes","initialState","connect","contactsSelectors","onSubmit","contactsOperations","useState","setState","handleInputOnChange","event","currentTarget","value","prev","reset","e","preventDefault","normalizedName","nameInContacts","find","numberInContacts","warn","info","className","style","formGroup","type","pattern","title","required","onChange","Button","variant","startIcon","useStyles","makeStyles","root","background","border","borderRadius","color","padding","margin","cursor","ContactItem","onClick","classes","listItem","href","onDeleteContact","map","contactsActions","App","isLoadingContacts","useSelector","isError","useDispatch","useEffect","position","autoClose","newestOnTop","closeOnClick","rtl","pauseOnFocusLoss","draggable","middleware","getDefaultMiddleware","serializableCheck","logger","store","configureStore","reducer","contactsReducer","devTools","process","ReactDOM","render","StrictMode","document","getElementById","module","exports"],"mappings":"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","file":"static/js/main.d20f9db7.chunk.js","sourcesContent":["import { createAction } from '@reduxjs/toolkit';\n\nexport const fetchContactsRequest = createAction(\n  'contacts/fetchContactsRequest',\n);\n\nexport const fetchContactsSuccess = createAction(\n  'contacts/fetchContactsSuccess',\n);\nexport const fetchContactsError = createAction('contacts/fetchContactsError');\n\nexport const addContactRequest = createAction('contacts/addContactRequest');\nexport const addContactSuccess = createAction('contacts/addContactSuccess');\nexport const addContactError = createAction('contacts/addContactError');\n\nexport const deleteContactRequest = createAction(\n  'contacts/deleteContactRequest',\n);\nexport const deleteContactSuccess = createAction(\n  'contacts/deleteContactSuccess',\n);\nexport const deleteContactError = createAction('contacts/deleteContactError');\n\nexport const searchContacts = createAction('contacts/search');\n\n// eslint-disable-next-line import/no-anonymous-default-export\nexport default {\n  fetchContactsRequest,\n  fetchContactsSuccess,\n  fetchContactsError,\n\n  addContactRequest,\n  addContactSuccess,\n  addContactError,\n\n  deleteContactRequest,\n  deleteContactSuccess,\n  deleteContactError,\n\n  searchContacts,\n};\n","import axios from 'axios';\nimport { toast } from 'react-toastify';\n\n// import { v4 as uuidv4 } from 'uuid';\nimport actions from './contacts-actions';\n\naxios.defaults.baseURL = 'http://localhost:3131';\n\nconst fetchContacts = () => async dispatch => {\n  dispatch(actions.fetchContactsRequest());\n\n  try {\n    const { data } = await axios.get('/contacts');\n\n    dispatch(actions.fetchContactsSuccess(data));\n  } catch (error) {\n    dispatch(actions.fetchContactsError());\n    toast.error(error.message);\n  }\n};\n\nconst addContact = (name, number) => async dispatch => {\n  const contact = { name, number };\n\n  dispatch(actions.addContactRequest());\n\n  try {\n    const { data } = await axios.post('/contacts', contact);\n\n    dispatch(actions.addContactSuccess(data));\n  } catch (error) {\n    dispatch(actions.addContactError(error));\n    toast.error(error.message);\n  }\n};\n\nconst deleteContact = contactId => async dispatch => {\n  dispatch(actions.deleteContactRequest());\n\n  try {\n    await axios.delete(`/contacts/${contactId}`);\n\n    dispatch(actions.deleteContactSuccess(contactId));\n  } catch (error) {\n    dispatch(actions.deleteContactError(error));\n    toast.error(error.message);\n  }\n};\n\n// eslint-disable-next-line import/no-anonymous-default-export\nexport default { fetchContacts, addContact, deleteContact };\n","import { createReducer } from '@reduxjs/toolkit';\nimport { combineReducers } from 'redux';\n\nimport actions from './contacts-actions';\n\nconst items = createReducer([], {\n  [actions.fetchContactsSuccess]: (_, { payload }) =>\n    payload.sort((a, b) => a.name.localeCompare(b.name)),\n  [actions.addContactSuccess]: (state, { payload }) => [payload, ...state],\n  [actions.deleteContactSuccess]: (state, { payload }) =>\n    state.filter(({ id }) => id !== payload),\n});\n\nconst loading = createReducer(false, {\n  [actions.fetchContactsRequest]: () => true,\n  [actions.fetchContactsSuccess]: () => false,\n  [actions.fetchContactsError]: () => false,\n\n  [actions.addContactRequest]: () => true,\n  [actions.addContactSuccess]: () => false,\n  [actions.addContactError]: () => false,\n\n  [actions.deleteContactRequest]: () => true,\n  [actions.deleteContactSuccess]: () => false,\n  [actions.deleteContactError]: () => false,\n});\n\nconst filter = createReducer('', {\n  [actions.searchContacts]: (_, { payload }) => payload,\n});\n\nconst error = createReducer(null, {\n  [actions.fetchContactsError]: (_, { payload }) => payload,\n  [actions.addContactError]: (_, { payload }) => payload,\n  [actions.deleteContactError]: (_, { payload }) => payload,\n\n  [actions.fetchContactsRequest]: () => null,\n  [actions.fetchContactsSuccess]: () => null,\n\n  [actions.addContactRequest]: () => null,\n  [actions.addContactSuccess]: () => null,\n\n  [actions.deleteContactRequest]: () => null,\n  [actions.deleteContactSuccess]: () => null,\n});\n\nexport default combineReducers({\n  items,\n  filter,\n  loading,\n  error,\n});\n","import { createSelector } from '@reduxjs/toolkit'; // Импорт функции для мемоизации селектора\n\nconst getContacts = state => state.contacts.items;\nconst getFilter = state => state.contacts.filter;\nconst getLoading = state => state.contacts.loading;\nconst getError = state => state.contacts.error;\n\n// Мемоизация функции фильтра контактов на базе композитного селектора\nconst getfilteredContacts = createSelector(\n  [getContacts, getFilter],\n\n  (contacts, filter) => {\n    const normalizedFilter = filter.toLowerCase();\n\n    return contacts.filter(({ name }) =>\n      name.toLowerCase().includes(normalizedFilter),\n    );\n  },\n);\n\n// eslint-disable-next-line\nexport default {\n  getContacts,\n  getFilter,\n  getLoading,\n  getError,\n  getfilteredContacts,\n};\n","import { useState } from 'react';\nimport { toast } from 'react-toastify';\nimport React from 'react';\nimport { connect } from 'react-redux';\n\nimport style from './ContactForm.module.css';\nimport 'react-toastify/dist/ReactToastify.css';\nimport Button from '@material-ui/core/Button';\nimport AddIcon from '@material-ui/icons/Add';\nimport { contactsOperations, contactsSelectors } from '../../redux/contacts';\n\nconst initialState = {\n  name: '',\n  number: '',\n};\n\nfunction ContactForm({ contacts, onSubmit }) {\n  const [state, setState] = useState(initialState);\n  const { name, number } = state;\n\n  const handleInputOnChange = event => {\n    const { name, value } = event.currentTarget;\n\n    setState(prev => ({\n      ...prev,\n      [name]: value,\n    }));\n  };\n\n  const onSubmitHandler = e => {\n    e.preventDefault();\n\n    const normalizedName = name.toLowerCase();\n    const nameInContacts = contacts.find(\n      contact => contact.name === normalizedName,\n    );\n    const numberInContacts = contacts.find(\n      contact => contact.number === number,\n    );\n\n    if (e.currentTarget.name === '') {\n      toast.info('Fill in the input fields name and number!');\n      return;\n    }\n    if (!nameInContacts && !numberInContacts) {\n      onSubmit(normalizedName, number);\n      reset();\n      return;\n    }\n    toast.warn(`${name} is already in phonebook !`);\n  };\n\n  const reset = () => {\n    setState(initialState);\n  };\n\n  return (\n    <form onSubmit={onSubmitHandler}>\n      <div className={style.formGroup}>\n        <label>\n          Name{' '}\n          <input\n            type=\"text\"\n            name=\"name\"\n            value={name}\n            pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n            title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\n            required\n            onChange={handleInputOnChange}\n          />\n        </label>\n\n        <label>\n          Number{' '}\n          <input\n            type=\"tel\"\n            name=\"number\"\n            value={number}\n            pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n            title=\"Номер телефона должен состоять цифр и может содержать пробелы, тире, круглые скобки и может начинаться с +\"\n            required\n            onChange={handleInputOnChange}\n          />\n        </label>\n      </div>\n\n      <Button type=\"submit\" variant=\"contained\" startIcon={<AddIcon />}>\n        Add contact\n      </Button>\n    </form>\n  );\n}\n\nconst mapStateToProps = state => ({\n  contacts: contactsSelectors.getContacts(state),\n});\n\nconst mapDispatchToProps = dispatch => ({\n  onSubmit: (name, number) =>\n    dispatch(contactsOperations.addContact(name, number)),\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(ContactForm);\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport Button from '@material-ui/core/Button';\nimport { makeStyles } from '@material-ui/core/styles';\nimport DeleteIcon from '@material-ui/icons/Delete';\n\nimport style from './ContactList.module.css';\n\nconst useStyles = makeStyles({\n  root: {\n    background: 'grey',\n    border: 0,\n    borderRadius: 3,\n    color: 'black',\n    padding: '2px 5px',\n    margin: '5px 15px',\n    cursor: 'pointer',\n  },\n});\n\nconst ContactItem = ({ name, number, onClick }) => {\n  const classes = useStyles();\n\n  return (\n    <li className={style.listItem}>\n      <span>{name}</span>\n      <a href={`tel:${number}`}>{number}</a>\n\n      <Button\n        type=\"button\"\n        variant=\"contained\"\n        color=\"secondary\"\n        className={classes.root}\n        startIcon={<DeleteIcon />}\n        onClick={onClick}\n      >\n        Delete\n      </Button>\n    </li>\n  );\n};\n\nContactItem.propTypes = {\n  name: PropTypes.string.isRequired,\n  number: PropTypes.string.isRequired,\n  onClick: PropTypes.func.isRequired,\n};\n\nexport default ContactItem;\n","import React from 'react';\nimport ContactItem from './ContactItem';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport { contactsOperations, contactsSelectors } from '../../redux/contacts';\n\nconst ContactList = ({ contacts, onDeleteContact }) => {\n  return (\n    <ol>\n      {contacts.map(({ name, number, id }) => (\n        <ContactItem\n          key={id}\n          name={name}\n          number={number}\n          onClick={() => onDeleteContact(id)}\n        />\n      ))}\n    </ol>\n  );\n};\n\nContactList.propTypes = {\n  contacts: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.string.isRequired,\n      name: PropTypes.string.isRequired,\n      number: PropTypes.string.isRequired,\n    }),\n  ),\n  onDeleteContact: PropTypes.func.isRequired,\n};\n\n// const getVisibleContacts = (allContacts, filter) => {\n//   const normalizedFilter = filter.toLowerCase();\n\n//   return allContacts.filter(({ name }) =>\n//     name.toLowerCase().includes(normalizedFilter),\n//   );\n// };\n\nconst mapStateToProps = state => ({\n  contacts: contactsSelectors.getfilteredContacts(state),\n});\n\n// const mapStateToProps = ({ contacts: { items, filter } }) => ({\n//   contacts: getVisibleContacts(items, filter),\n// });\n\nconst mapDispatchToProps = dispatch => ({\n  onDeleteContact: id => dispatch(contactsOperations.deleteContact(id)),\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(ContactList);\n","import React from 'react';\nimport './Filter.module.css';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport { contactsSelectors, contactsActions } from '../../redux/contacts';\n\nconst Filter = ({ value, onChange }) => {\n  return (\n    <label>\n      {' '}\n      Find contacts by name\n      <input type=\"text\" value={value} onChange={onChange} />\n    </label>\n  );\n};\n\nFilter.propTypes = {\n  value: PropTypes.string.isRequired,\n  onChange: PropTypes.func.isRequired,\n};\n\nconst mapStateToProps = state => ({\n  value: contactsSelectors.getFilter(state),\n});\n\nconst mapDispatchToProps = dispatch => ({\n  onChange: event =>\n    dispatch(contactsActions.searchContacts(event.currentTarget.value)),\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Filter);\n","import React from 'react';\nimport { useEffect } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport './App.css';\nimport ContactForm from './components/ContactForm';\nimport { contactsOperations, contactsSelectors } from './redux/contacts';\nimport ContactList from './components/ContactList';\nimport Filter from './components/Filter';\nimport 'react-toastify/dist/ReactToastify.css';\nimport { ToastContainer } from 'react-toastify';\n\nfunction App() {\n  const isLoadingContacts = useSelector(state =>\n    contactsSelectors.getLoading(state),\n  );\n  const isError = useSelector(state => contactsSelectors.getError(state));\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    dispatch(contactsOperations.fetchContacts());\n  }, [dispatch]);\n\n  return (\n    <div className=\"Container\">\n      <h1>Phonebook</h1>\n      <ContactForm />\n\n      <Filter />\n\n      <h2>Contacts</h2>\n\n      <ContactList />\n\n      {isLoadingContacts}\n      {isError}\n\n      <ToastContainer\n        position=\"top-center\"\n        autoClose={2000}\n        newestOnTop={false}\n        closeOnClick\n        rtl={false}\n        pauseOnFocusLoss={false}\n        draggable={false}\n      />\n    </div>\n  );\n}\n\nexport default App;\n","import { configureStore, getDefaultMiddleware } from '@reduxjs/toolkit';\nimport logger from 'redux-logger';\n// import {\n//   FLUSH,\n//   REHYDRATE,\n//   PAUSE,\n//   PERSIST,\n//   PURGE,\n//   REGISTER,\n// } from 'redux-persist';\n\nimport { contactsReducer } from './contacts';\n\nconst middleware = [\n  ...getDefaultMiddleware({\n    serializableCheck: false,\n  }),\n\n  logger,\n];\n\nconst store = configureStore({\n  reducer: {\n    contacts: contactsReducer,\n  },\n  middleware,\n  devTools: process.env.NODE_ENV === 'development',\n});\n\n// const persistor = persistStore(store);\n\nexport default store;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { BrowserRouter } from 'react-router-dom';\nimport { Provider } from 'react-redux';\nimport App from './App.jsx';\nimport store from './redux/store';\n// import { PersistGate } from 'redux-persist/integration/react';\nimport 'modern-normalize/modern-normalize.css';\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      {/* <PersistGate loading={null} persistor={store.persistor}> */}\n      <BrowserRouter>\n        <App />\n      </BrowserRouter>\n      {/* </PersistGate> */}\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"formGroup\":\"ContactForm_formGroup__1LnTH\",\"form-group\":\"ContactForm_form-group__ZsP-0\",\"button\":\"ContactForm_button__2oKN9\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"button\":\"ContactList_button__14aFJ\",\"listItem\":\"ContactList_listItem__ia2QZ\"};"],"sourceRoot":""}